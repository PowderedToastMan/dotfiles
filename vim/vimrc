" Disable plugins based on vim version
let g:pathogen_disabled = []

if v:version < '703'
  call add(g:pathogen_disabled, 'YouCompleteMe')
  call add(g:pathogen_disabled, 'ultisnips')
endif
call pathogen#infect()

set nocompatible                " Use Vim defaults instead of 100% vi compatibility
set backspace=indent,eol,start  " more powerful backspacing
set background=dark
colorscheme solarized

set cursorline
set cursorcolumn
autocmd WinEnter * setlocal cursorline
autocmd WinLeave * setlocal nocursorline
autocmd WinEnter * setlocal cursorcolumn
autocmd WinLeave * setlocal nocursorcolumn

set autoindent
set number
set ts=2 sts=2 sw=2 expandtab
set history=1000
set linebreak
syntax on

" airline
set ls=2
set encoding=utf-8
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" indent html
let g:html_indent_inctags = "html,body,head,tbody"

" easymotion 2-character search
nmap s <Plug>(easymotion-s2)
nmap t <Plug>(easymotion-t2)

" easymotion n-character search
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)

" easymotion misc
let g:EasyMotion_smartcase = 1

" OS specific rules
if has ('win32')
  set nobackup
  set nowritebackup
  set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h9
  set mousemodel=
  set clipboard=unnamed
else
  silent execute '!rm -rf $HOME/.vim/tmp'
  silent execute '!mkdir -p $HOME/.vimtmp/backup'
  set backupdir=$HOME/.vimtmp/backup
  silent execute '!mkdir -p $HOME/.vimtmp/swap'
  set directory=$HOME/.vimtmp/swap
  silent execute '!mkdir -p $HOME/.vimtmp/views'
  set viewdir=$HOME/.vimtmp/views
  set guifont=Terminus
endif

set hlsearch
set incsearch
set mouse=a
set nowrap
set ofu=syntaxcomplete#Complete
set ruler
set linespace=0
set splitbelow
set splitright

" filetype
filetype on
filetype plugin on
filetype indent on

map <F2>           :w !sudo tee %<CR>
map <C-N>          :tabnext<CR>
map <C-P>          :tabprev<CR>
map <F9>           :q<CR>
map <F8>           :TagbarToggle<CR>
map <F10>          :split<CR>
map <F11>          :vsplit<CR>
map <F12>          :tabnew<CR>
nnoremap <leader>w :setlocal wrap!<cr>
nnoremap <leader>c :Tabularize /\\<cr>
nnoremap <leader>p :set paste!<cr>
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l
let g:BASH_Ctrl_j = 'off'
nnoremap <LEFT> zh
nnoremap <RIGHT> zl
nnoremap <UP> <C-y>
nnoremap <DOWN> <C-e>

if has('gui_running')
  " Make shift-insert work like in Xterm
  map <S-Insert> <MiddleMouse>
  map! <S-Insert> <MiddleMouse>
endif

let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsEditSplit="vertical"

if $TERM == "xterm-256color" || $TERM == "screen-256color" || $TERM == "rxv-unicode-256color" || $COLORTERM == "gnome-terminal"
  set t_Co=256
endif
